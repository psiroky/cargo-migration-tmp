<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Codehaus CARGO, copyright 2004-2011 Vincent Massol.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.cargo</groupId>
    <artifactId>cargo-samples-maven2</artifactId>
    <version>1.3.4-SNAPSHOT</version>
  </parent>
  <artifactId>cargo-sample-maven2-tomcat7-context-test</artifactId>
  <name>Cargo Samples - Maven 2 - Tomcat 7 context test</name>
  <packaging>jar</packaging>
  <description>Sample application that exercises the Cargo Maven2 plugin with a Tomcat 7.x container and a user-defined context</description>

  <dependencies>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-sample-java</artifactId>
      <version>${cargo.core.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>simple-war</artifactId>
      <version>${cargo.resources.version}</version>
      <type>war</type>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <version>${project.version}</version>
        <configuration>
          <container>
            <containerId>tomcat7x</containerId>
            <zipUrlInstaller>
              <url>http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.39/bin/apache-tomcat-7.0.39.zip</url>
              <downloadDir>${project.basedir}/../../../../core/samples/java/installs</downloadDir>
            </zipUrlInstaller>
          </container>
          <configuration>
            <home>${project.build.directory}/catalina-base</home>
            <properties>
              <cargo.servlet.port>${cargo.samples.servlet.port}</cargo.servlet.port>
              <cargo.rmi.port>${cargo.samples.rmi.port}</cargo.rmi.port>
              <cargo.tomcat.ajp.port>${cargo.samples.tomcat.ajp.port}</cargo.tomcat.ajp.port>
            </properties>
          </configuration>
          <deployables>
            <deployable>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>simple-war</artifactId>
              <type>war</type>
              <properties>
                <context>/user-context-test</context>
              </properties>
            </deployable>
          </deployables>
        </configuration>
        <executions>
          <execution>
            <id>start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
        <executions>
          <execution>
            <id>surefire-it</id>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skip>${maven.test.skip}</skip>
              <systemProperties>
                <property>
                  <name>http.port</name>
                  <value>${cargo.samples.servlet.port}</value>
                </property>
              </systemProperties>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
