<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>${groupId}</groupId>
    <artifactId>${rootArtifactId}</artifactId>
    <version>${version}</version>
  </parent>
  <artifactId>${artifactId}</artifactId>
  <packaging>pom</packaging>
  <name>Maven Functional Tests</name>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>${rootArtifactId}-webapp</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-maven2-plugin</artifactId>
          <configuration>
            <configuration>
              <deployables>
                <deployable>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>${rootArtifactId}-webapp</artifactId>
                  <type>war</type>
                  <properties>
                    <context>${rootArtifactId}-webapp</context>
                  </properties>
                </deployable>
              </deployables>
              <properties>
                <cargo.servlet.port>8080</cargo.servlet.port>
              </properties>
              <!--
                On MacOS X, the default location where a standalone configuration
                is created is something like:
                 /var/folders/ZR/ZRsat8n-H6qoVq+LK+r86U+++TI/-Tmp-/cargo/conf
                which makes startup sequence fail for some containers.
                To avoid this, make sure you specify:

              <home>${project.build.directory}/cargo/container</home>
              -->              
            </configuration>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <!--
        We need to force the compiler plugin to compile tests and the surefire plugin to execute
        them because we're using a pom packaging that doesn't have those mapped in its lifecycle.
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <executions>
          <execution>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <executions>
          <execution>
            <id>start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <wait>false</wait>
            </configuration>
          </execution>
          <execution>
            <id>stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>jetty6x</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <configuration>
                <container>
                  <containerId>jetty6x</containerId>
                  <type>embedded</type>
                </container>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>tomcat6x</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <configuration>
                <container>
                  <containerId>tomcat6x</containerId>
                  <zipUrlInstaller>
                    <url>http://archive.apache.org/dist/tomcat/tomcat-6/v6.0.29/bin/apache-tomcat-6.0.29.zip</url>
                  </zipUrlInstaller>
                </container>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>jonas5x</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <configuration>
                <container>
                  <containerId>jonas5x</containerId>
                  <zipUrlInstaller>
                    <url>http://download.fr.forge.objectweb.org/jonas/jonas-full-5.1.2-bin.tar.gz</url>
                  </zipUrlInstaller>
                </container>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>jboss51x</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <configuration>
                <container>
                  <containerId>jboss51x</containerId>
                  <zipUrlInstaller>
                    <url>http://downloads.sourceforge.net/jboss/jboss-5.1.0.GA.zip?big_mirror=1</url>
                    <!--
                      On MacOS X, the default installDir is something like:
                       /var/folders/ZR/ZRsat8n-H6qoVq+LK+r86U+++TI/-Tmp-/cargo/installs
                      which makes the JBoss startup sequence fail. Please make sure you
                      specify an installDir to avoid that issue:

                    <installDir>installs/cargo</installDir>
                    -->
                  </zipUrlInstaller>
                </container>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>glassfish3x</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <configuration>
                <container>
                  <containerId>glassfish3x</containerId>
                  <zipUrlInstaller>
                    <url>http://download.java.net/glassfish/3.0.1/release/glassfish-3.0.1-web.zip</url>
                    <!--
                      On MacOS X, the default installDir is something like:
                       /var/folders/ZR/ZRsat8n-H6qoVq+LK+r86U+++TI/-Tmp-/cargo/installs
                      which makes the GlassFish startup sequence fail. Please make sure you
                      specify an installDir to avoid that issue:

                    <installDir>installs/cargo</installDir>
                    -->
                  </zipUrlInstaller>
                </container>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
</project>
