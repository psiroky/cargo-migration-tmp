<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>\${groupId}</groupId>
  <artifactId>\${artifactId}</artifactId>
  <version>\${version}</version>
  <packaging>war</packaging>
  <name>Maven Webapp</name>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <servlet.port>8080</servlet.port>

    <!--
      The default directory for installing containers is ${java.io.tmpdir} (see: CARGO-895). On
      MacOS X, this location corresponds to something like:
          /var/folders/ZR/ZRsat8n-H6qoVq+LK+r86U+++TI/-Tmp-/cargo/conf
      Some containers' startup sequences fail for such a directory. Hence, we define here our own
      directories.
    -->
    <cargo.container.installation.directory>
      ${basedir}/installs/cargo
    </cargo.container.installation.directory>
  </properties>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-maven2-plugin</artifactId>
          <version>${project.version}</version>
          <configuration>
            <configuration>
              <deployables>
                <!--
                  The project's artifact is automatically deployed if no deployable
                  is defined. However, we define it here so that we can specify the
                  context (we don't want the version to be included in the context).
                -->
                <deployable>
                  <groupId>\${project.groupId}</groupId>
                  <artifactId>\${project.artifactId}</artifactId>
                  <type>war</type>
                  <properties>
                    <context>\${project.artifactId}</context>
                  </properties>
                </deployable>
              </deployables>
              <properties>
                <cargo.servlet.port>\${servlet.port}</cargo.servlet.port>
              </properties>
              <home>${cargo.container.configuration.directory}</home>
            </configuration>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <!-- Exclude all integration tests so that they are not executed during the test phase.
               This is because of a limitation in Maven 2.0.x which only supports compiling a
               single test source tree. The recommendation is to create a separate module for
               functional tests as is done in the cargo-archetype-webapp-functional-test-module -->
          <excludes>
            <exclude>**/it/**</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <!-- Include only integration tests so that they are executed during the
                   integration-test phase. Again this this is because of a limitation in
                   Maven 2.0.x which only supports compiling a single test source tree. The
                   recommendation is to create a separate module for functional tests as is done
                   in the cargo-archetype-webapp-functional-test-module -->
              <excludes>
                <exclude>none</exclude>
              </excludes>
              <includes>
                <include>**/it/**</include>
              </includes>
              <systemProperties>
                <property>
                  <name>servlet.port</name>
                  <value>${servlet.port}</value>
                </property>
              </systemProperties>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <executions>
          <execution>
            <id>start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <wait>false</wait>
            </configuration>
          </execution>
          <execution>
            <id>stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>jetty6x</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <configuration>
                <container>
                  <containerId>jetty6x</containerId>
                  <type>embedded</type>
                </container>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>tomcat6x</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <configuration>
                <container>
                  <containerId>tomcat6x</containerId>
                  <zipUrlInstaller>
                    <url>http://archive.apache.org/dist/tomcat/tomcat-6/v6.0.29/bin/apache-tomcat-6.0.29.zip</url>
                    <installDir>${cargo.container.installation.directory}</installDir>
                  </zipUrlInstaller>
                </container>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>jonas5x</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <configuration>
                <container>
                  <containerId>jonas5x</containerId>
                  <zipUrlInstaller>
                    <url>http://download.fr.forge.objectweb.org/jonas/jonas-full-5.1.2-bin.tar.gz</url>
                    <installDir>${cargo.container.installation.directory}</installDir>
                  </zipUrlInstaller>
                </container>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>jboss51x</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <configuration>
                <container>
                  <containerId>jboss51x</containerId>
                  <zipUrlInstaller>
                    <url>http://downloads.sourceforge.net/jboss/jboss-5.1.0.GA.zip?big_mirror=1</url>
                    <installDir>${cargo.container.installation.directory}</installDir>
                  </zipUrlInstaller>
                </container>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>glassfish3x</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <configuration>
                <container>
                  <containerId>glassfish3x</containerId>
                  <zipUrlInstaller>
                    <url>http://download.java.net/glassfish/3.0.1/release/glassfish-3.0.1-web.zip</url>
                    <installDir>${cargo.container.installation.directory}</installDir>
                  </zipUrlInstaller>
                </container>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
</project>
