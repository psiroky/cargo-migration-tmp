<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Codehaus CARGO, copyright 2004-2011 Vincent Massol.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.cargo</groupId>
    <artifactId>cargo-extensions-maven2</artifactId>
    <version>1.4.7-SNAPSHOT</version>
  </parent>
  <artifactId>cargo-maven2-archetypes</artifactId>
  <name>Cargo Maven Archetypes</name>
  <packaging>pom</packaging>
  <description>Sample Maven archetypes for using Cargo</description>

  <modules>
    <module>webapp-single-module</module>
    <module>webapp-functional-tests-module</module>
    <module>webapp-with-datasource</module>
    <module>remote-deployment</module>
    <module>daemon</module>
  </modules>

  <build>
    <extensions>
      <extension>
        <groupId>org.apache.maven.archetype</groupId>
        <artifactId>archetype-packaging</artifactId>
        <version>2.0</version>
      </extension>
    </extensions>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-archetype-plugin</artifactId>
          <version>2.0</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <executions>
            <execution>
                <!-- Make sure tests use randomly assigned and available port. -->
              <id>generate-port-numbers</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>reserve-network-port</goal>
              </goals>
              <configuration>
                <portNames>
                  <portName>cargo.itest.daemon.port</portName>
                  <portName>cargo.itest.servlet.port</portName>
                </portNames>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-invoker-plugin</artifactId>
          <configuration>
            <debug>true</debug>
            <cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
            <!-- Can't use a cloned local repo as the cargo maven plugin isn't installed
                 in the clone process. See issue MINVOKER-115.
            <localRepositoryPath>${project.build.directory}/local-repo</localRepositoryPath> -->
            <pomIncludes>
              <pomInclude>*</pomInclude>
            </pomIncludes>
            <properties>
              <interactiveMode>false</interactiveMode>
              <archetypeCatalog>local</archetypeCatalog>
              <archetypeGroupId>${project.groupId}</archetypeGroupId>
              <archetypeArtifactId>${project.artifactId}</archetypeArtifactId>
              <archetypeVersion>${project.version}</archetypeVersion>
              <servlet.port>${cargo.itest.servlet.port}</servlet.port>
              <daemon.port>${cargo.itest.daemon.port}</daemon.port>
            </properties>
          </configuration>
          <executions>
            <execution>
              <id>integration-test</id>
              <goals>
                <goal>install</goal>
                <goal>run</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
